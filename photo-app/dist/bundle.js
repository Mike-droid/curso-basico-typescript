(()=>{"use strict";var t={987:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Album=void 0;const r=i(123);class o extends r.Item{constructor(t,e){super(t,e),this.pictures=[]}addPicture(t){this.pictures.push(t)}}e.Album=o},123:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Item=void 0,e.Item=class{constructor(t,e){this.id=t,this.title=e}}},945:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.PhotoOrientation=void 0,(i=e.PhotoOrientation||(e.PhotoOrientation={}))[i.Landscape=0]="Landscape",i[i.Portrait=1]="Portrait",i[i.Square=2]="Square",i[i.Panorama=3]="Panorama"},449:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Picture=void 0;const r=i(123);class o extends r.Item{constructor(t,e,i,r){super(t,e),this._date=i,this._orientation=r}toString(){return`[\n      id: ${this.id},\n      title: ${this.title},\n      orientation: ${this._orientation}\n    ]`}}e.Picture=o},536:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.User=void 0,e.User=class{constructor(t,e,i,r){this.id=t,this.username=e,this.firstName=i,this.isPro=r,this.album=[]}addAlbum(t){this.album.push(t)}removeAlbum(t){const e=this.album.findIndex((e=>e.id===t.id));let i;return e>=0&&(i=this.album[e],this.album.splice(e,1)),i}}}},e={};function i(r){var o=e[r];if(void 0!==o)return o.exports;var s=e[r]={exports:{}};return t[r](s,s.exports,i),s.exports}(()=>{const t=i(987),e=i(945),r=i(449),o=new(i(536).User)(1,"Mike","Miguel",!0),s=new t.Album(1,"First Album"),n=new r.Picture(1,"First pic","2020-10-15",e.PhotoOrientation.Portrait);o.addAlbum(s),s.addPicture(n),console.table(o),console.table(s),console.table(n),o.removeAlbum(s),console.log("User: ",o)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,